{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaahmad/Desktop/afimza/client/src/components/addThought.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport Dialog from \"@mui/material/Dialog\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { addThought } from \"../store/actions\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../globals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddThought = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [thought, setThought] = React.useState(\"\");\n  const [details, setDetails] = React.useState(\"\");\n\n  const clear = () => {\n    setThought(\"\");\n    setDetails(\"\");\n  };\n\n  const submit = () => {\n    axios.post(`${baseUrl}/thoughts`, {\n      thought,\n      details\n    }).then(res => {\n      dispatch(addThought(res.data));\n    });\n    clear();\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        pb: 1\n      },\n      children: \"What are you thinking ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        pb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        fullWidth: true,\n        size: \"small\",\n        id: \"outlined-basic\",\n        label: \"Thought\",\n        value: thought,\n        onChange: e => setThought(e.target.value),\n        variant: \"outlined\",\n        sx: {\n          my: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-flexible\",\n        label: \"Details\",\n        multiline: true,\n        fullWidth: true,\n        value: details,\n        onChange: e => setDetails(e.target.value),\n        sx: {\n          my: 1\n        },\n        minRows: 5,\n        maxRows: 6,\n        onKeyDown: e => e.key === \"Enter\" ? document.getElementById(\"submit\").click() : () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"submit\",\n        onClick: () => {\n          submit();\n        },\n        className: \"float-right\",\n        color: \"success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddThought, \"W8sbAQomMXMCTmLEwzqGqauU0BA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddThought;\nexport default AddThought;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddThought\");","map":{"version":3,"sources":["/Users/hamzaahmad/Desktop/afimza/client/src/components/addThought.jsx"],"names":["React","useDispatch","DialogTitle","DialogContent","Dialog","TextField","Button","addThought","axios","baseUrl","AddThought","props","dispatch","onClose","open","handleClose","thought","setThought","useState","details","setDetails","clear","submit","post","then","res","data","pb","e","target","value","my","key","document","getElementById","click"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport Dialog from \"@mui/material/Dialog\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { addThought } from \"../store/actions\";\n\nimport axios from \"axios\";\nimport { baseUrl } from \"../globals\";\n\nconst AddThought = (props) => {\n  const dispatch = useDispatch();\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [thought, setThought] = React.useState(\"\");\n  const [details, setDetails] = React.useState(\"\");\n\n  const clear = () => {\n    setThought(\"\");\n    setDetails(\"\");\n  };\n\n  const submit = () => {\n    axios\n      .post(`${baseUrl}/thoughts`, {\n        thought,\n        details,\n      })\n      .then((res) => {\n        dispatch(addThought(res.data));\n      });\n    clear();\n    onClose();\n  };\n\n  return (\n    <Dialog fullWidth onClose={handleClose} open={open}>\n      <DialogTitle sx={{ pb: 1 }}>What are you thinking ?</DialogTitle>\n      <DialogContent sx={{ pb: 1 }}>\n        <TextField\n          autoFocus\n          fullWidth\n          size=\"small\"\n          id=\"outlined-basic\"\n          label=\"Thought\"\n          value={thought}\n          onChange={(e) => setThought(e.target.value)}\n          variant=\"outlined\"\n          sx={{ my: 1 }}\n        />\n        <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Details\"\n          multiline\n          fullWidth\n          value={details}\n          onChange={(e) => setDetails(e.target.value)}\n          sx={{ my: 1 }}\n          minRows={5}\n          maxRows={6}\n          onKeyDown={(e) =>\n            e.key === \"Enter\"\n              ? document.getElementById(\"submit\").click()\n              : () => {}\n          }\n        />\n        <Button\n          id=\"submit\"\n          onClick={() => {\n            submit();\n          }}\n          className=\"float-right\"\n          color=\"success\"\n        >\n          Add\n        </Button>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddThought;\n"]},"metadata":{},"sourceType":"module"}